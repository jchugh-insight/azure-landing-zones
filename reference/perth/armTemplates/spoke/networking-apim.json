{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "companyPrefix": {
            "type": "string",
            "maxLength": 5
        },
        "locationPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "environmentPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "argPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "vntPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "udrPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "nsgPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "subscriptionTag": {
            "type": "string"
        },
        "ownerTag": {
            "type": "string"
        },
        "costCenterTag": {
            "type": "string"
        },
        "addressPrefix": {
            "type": "string",
            "metadata": {
                "displayName": "addressPrefix",
                "description": "Address prefix of the Platform Landing Zone"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "displayName": "location",
                "description": "Location of the Platform Landing Zone"
            },
            "defaultValue": "[deployment().location]"
        },
        "enableSpoke": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "enableUdr": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "hubFwIp": {
            "type": "string",
            "defaultValue": ""
        },
        "enableApiM": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "subscriptionId": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 36
        },
        "subnetMaskForApiM": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "deploymentName": "[take(concat(deployment().name, '-networking'), 64)]",
        "namingPrefix": "[concat(parameters('companyPrefix'), '-', parameters('locationPrefix'), '-', parameters('environmentPrefix'))]",
        "resourceGroupName": "[toLower(concat(variables('namingPrefix'), '-', parameters('argPrefix'), '-network'))]",
        "azVnetCidr": "[substring(parameters('addressPrefix'),0,sub(length(parameters('addressPrefix')), 3))]",
        "azVnetName": "[toLower(concat(variables('namingPrefix'), '-', parameters('vntPrefix'), '-', variables('azVnetCidr')))]",
        "nwName": "[toLower(concat(variables('namingPrefix'), '-anw-', parameters('location')))]",
        "udrName": "[toLower(take(concat(variables('namingPrefix'), '-', parameters('udrPrefix'), '-', guid(parameters('companyPrefix'))), 24))]",
        "udrRoute": "subnet-to-azureFirewall",
        "udrId": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', variables('resourceGroupName'),'/providers/Microsoft.Network/routeTables/', variables('udrName'))]",
        "subnetName001": "ApiManagement",
        "nsgName001": "[toLower(concat(variables('namingPrefix'), '-', parameters('nsgPrefix'), '-', variables('subnetName001')))]",
        "nsgId001": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', variables('resourceGroupName'),'/providers/Microsoft.Network/networkSecurityGroups/', variables('nsgName001'))]",
        "apiVersions": {
            "deployments": "2020-06-01",
            "resourceGroups": "2020-06-01",
            "locks": "2016-09-01",
            "virtualNetworks": "2020-05-01",
            "subnets": "2020-05-01",
            "networkWatchers": "2019-11-01",
            "networkSecurityGroups": "2020-05-01",
            "routeTables": "2020-05-01"
        },
        "tags": {
            "environment": "[parameters('subscriptionTag')]",
            "owner": "[parameters('ownerTag')]",
            "costCenter": "[parameters('costCenterTag')]"
        }
    },
    "resources": [
        // Nested deployment for Azure Virtual Netowrk (Management Group Level)
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "name": "[variables('deploymentName')]",
            "location": "[deployment().location]",
            "subscriptionId": "[parameters('subscriptionId')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        // Create Resource Group
                        {
                            "condition": "[and(equals(parameters('enableSpoke'), 'Yes'), not(empty(parameters('subscriptionId'))))]",
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "[variables('apiVersions').resourceGroups]",
                            "name": "[variables('resourceGroupName')]",
                            "location": "[deployment().location]",
                            "tags": {
                                "environment": "[variables('tags').environment]",
                                "owner": "[variables('tags').owner]",
                                "costCenter": "[variables('tags').costCenter]"
                            },
                            "properties": {}
                        },
                        // Nested deployment for Azure Networking (Subscription Level)
                        {
                            "type": "Microsoft.Resources/deployments",
                            "apiVersion": "[variables('apiVersions').deployments]",
                            "name": "[variables('deploymentName')]",
                            "resourceGroup": "[variables('resourceGroupName')]",
                            "dependsOn": [
                                "[concat('Microsoft.Resources/resourceGroups/', variables('resourceGroupName'))]"
                            ],
                            "properties": {
                                "mode": "Incremental",
                                "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "resources": [
                                        // Deploy Resource Group Lock
                                        {
                                            "type": "Microsoft.Authorization/locks",
                                            "apiVersion": "[variables('apiVersions').locks]",
                                            "name": "ResourceGroup-DontDelete",
                                            "properties": {
                                                "level": "CanNotDelete",
                                                "notes": "Prevent deletion of the resourceGroup"
                                            }
                                        },
                                        // Nested deployment for Storage (Resource Group Level)
                                        {
                                            "condition": "[and(equals(parameters('enableSpoke'), 'Yes'), not(empty(parameters('subscriptionId'))))]",
                                            "type": "Microsoft.Network/virtualNetworks",
                                            "apiVersion": "[variables('apiVersions').virtualNetworks]",
                                            "name": "[variables('azVnetName')]",
                                            "location": "[deployment().location]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName001'))]",
                                                "[concat('Microsoft.Network/routeTables/', variables('udrName'))]"
                                            ],
                                            "properties": {
                                                "addressSpace": {
                                                    "addressPrefixes": [
                                                        "[parameters('addressPrefix')]"
                                                    ]
                                                }
                                            },
                                            "resources": [
                                            ]
                                        },
                                        // Conditional deployment of Route Table
                                        {
                                            "condition": "[and(equals(parameters('enableUdr'), 'Yes'), not(empty(parameters('hubFwIp'))))]",
                                            "type": "Microsoft.Network/routeTables",
                                            "apiVersion": "[variables('apiVersions').routeTables]",
                                            "name": "[variables('udrName')]",
                                            "location": "[parameters('location')]",
                                            "properties": {
                                                "routes": [
                                                    {
                                                        "name": "[variables('udrRoute')]",
                                                        "properties": {
                                                            "addressPrefix": "0.0.0.0/0",
                                                            "nextHopType": "VirtualAppliance",
                                                            "nextHopIpAddress": "[parameters('hubFwIp')]"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        // Conditional deployment of Network Watcher
                                        {
                                            "condition": "[and(equals(parameters('enableSpoke'), 'Yes'), not(empty(parameters('subscriptionId'))))]",
                                            "type": "Microsoft.Network/networkWatchers",
                                            "apiVersion": "[variables('apiVersions').networkWatchers]",
                                            "name": "[variables('nwName')]",
                                            "location": "[deployment().location]",
                                            "tags": {},
                                            "properties": {},
                                            "resources": []
                                        },
                                        // Conditional deployment of ApiManagement Subnet
                                        {
                                            "condition": "[and(equals(parameters('enableApiM'), 'Yes'), not(empty(parameters('subnetMaskForApiM'))))]",
                                            "type": "Microsoft.Network/virtualNetworks/subnets",
                                            "apiVersion": "[variables('apiVersions').subnets]",
                                            "name": "[concat(variables('azVnetName'), '/', variables('subnetName001'))]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/virtualNetworks/', variables('azVnetName'))]",
                                                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName001'))]"
                                            ],
                                            "properties": {
                                                "addressPrefix": "[parameters('subnetMaskForApiM')]",
                                                "routeTable": {
                                                    "id": "[variables('udrId')]"
                                                },
                                                "networkSecurityGroup": {
                                                    "id": "[variables('nsgId001')]"
                                                }
                                            }
                                        },
                                        // Conditional deployment of NSG (ApiManagement)
                                        {
                                            "condition": "[and(equals(parameters('enableApiM'), 'Yes'), not(empty(parameters('subnetMaskForApiM'))))]",
                                            "type": "Microsoft.Network/networkSecurityGroups",
                                            "apiVersion": "[variables('apiVersions').networkSecurityGroups]",
                                            "name": "[variables('nsgName001')]",
                                            "location": "[parameters('location')]",
                                            "tags": {
                                                "appliedSubnet": "[concat(variables('azVnetName'), '/', variables('subnetName001'))]"
                                            },
                                            "properties": {
                                                "securityRules": [
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    ]
}
