{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "companyPrefix": {
            "type": "string",
            "maxLength": 5
        },
        "locationPrefix": {
            "type": "string",
            "maxLength": 5
        },
        "environmentPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "argPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "subscriptionTag": {
            "type": "string"
        },
        "ownerTag": {
            "type": "string"
        },
        "costCenterTag": {
            "type": "string"
        },
        "ServiceHealthRegions": {
            "defaultValue": [
                "Australia East"
            ],
            "type": "array"
        }
    },
    "variables": {
        "deploymentName": "[take(concat(deployment().name, '-serviceHealth'), 64)]",
        "namingPrefix": "[concat(parameters('companyPrefix'), '-', parameters('locationPrefix'), '-', parameters('environmentPrefix'))]",
        "resourceGroupName": "[toLower(concat(variables('namingPrefix'), '-', parameters('argPrefix'), '-monitoring'))]",
        "actionGroupName": "servicehealthactiongroup",
        "actionGroupShortName": "serviceAG",
        "emailAddress": "stephen.tulp@outlook.com",
        "activityLogAlertName": "serviceHealthAlert",
        "apiVersions": {
            "deployments": "2020-06-01",
            "resourceGroups": "2020-06-01",
            "locks": "2016-09-01",
            "actionGroups": "2019-06-01",
            "activityLogAlerts": "2020-10-01"
        },
        "tags": {
            "environment": "[parameters('subscriptionTag')]",
            "owner": "[parameters('ownerTag')]",
            "costCenter": "[parameters('costCenterTag')]"
        }
    },
    "resources": [
        // Create Resource Group
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "[variables('apiVersions').resourceGroups]",
            "location": "[deployment().location]",
            "name": "[variables('resourceGroupName')]",
            "tags": {
                "environment": "[variables('tags').environment]",
                "owner": "[variables('tags').owner]",
                "costCenter": "[variables('tags').costCenter]"
            },
            "properties": {}
        },
        // Nested deployment for Service Health (Subscription Level)
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "name": "[variables('deploymentName')]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/resourceGroups/', variables('resourceGroupName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        // Deploy Resource Group Lock
                        {
                            "type": "Microsoft.Authorization/locks",
                            "apiVersion": "[variables('apiVersions').locks]",
                            "name": "ResourceGroup-DontDelete",
                            "properties": {
                                "level": "CanNotDelete",
                                "notes": "Prevent deletion of the resourceGroup"
                            }
                        },
                        // Nested deployment for Service Health (Resource Group Level)
                        {
                            "type": "Microsoft.Insights/actionGroups",
                            "apiVersion": "[variables('apiVersions').actionGroups]",
                            "name": "[variables('actionGroupName')]",
                            "location": "Global",
                            "properties": {
                                "groupShortName": "[variables('actionGroupShortName')]",
                                "enabled": true,
                                "emailReceivers": [
                                    {
                                        "name": "emailReceiver",
                                        "emailAddress": "[variables('emailAddress')]",
                                        "useCommonAlertSchema": true
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.Insights/activityLogAlerts",
                            "apiVersion": "[variables('apiVersions').activityLogAlerts]",
                            "name": "[variables('activityLogAlertName')]",
                            "location": "Global",
                            "dependsOn": [
                                "[variables('actionGroupName')]"
                            ],
                            "properties": {
                                "enabled": true,
                                "scopes": [
                                    "[subscription().id]"
                                ],
                                "condition": {
                                    "allOf": [
                                        {
                                            "field": "category",
                                            "equals": "ServiceHealth"
                                        },
                                        {
                                            "field": "properties.impactedServices[*].ImpactedRegions[*].RegionName",
                                            "equals": null,
                                            "containsAny": "[parameters('ServiceHealthRegions')]"
                                        }
                                    ]
                                },
                                "actions": {
                                    "actionGroups": [
                                        {
                                            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    ]
}