{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "IdentityAddressPrefix": {
      "type": "string",
      "metadata": {
        "displayName": "addressPrefix",
        "description": "Address prefix of the HUB"
      }
    },
    "enableIdentitySpoke": {
      "type": "string",
      "defaultValue": "Yes",
      "allowedValues": [
        "Yes",
        "No"
      ]
    },
    "location": {
      "type": "string",
      "metadata": {
        "displayName": "location",
        "description": "Location of the HUB"
      },
      "defaultValue": "[deployment().location]"
    },
    "identitySubscriptionId": {
      "type": "string",
      "maxLength": 36,
      "defaultValue": ""
    },
    "networkRg": {
      "type": "string"
    },
    "networkWatcherRg": {
      "type": "string"
    },
    "networkWatcher": {
      "type": "string"
    },
    "vnet": {
      "type": "string"
    },
    "ddosPlanResourceId": {
      "type": "string"
    },
    "enableDdoS": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Select whether the DDoS Standard protection plan should be enabled or not."
      }
    },
    "vNetPeerUseRemoteGateway": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Use remote gateway or not."
      }
    },
    "hubResourceId": {
      "type": "string",
      "metadata": {
        "description": "Provide the resourceId for the hub."
      }
    },
    "dnsServers": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Provide DNS servers."
      }
    },
    "azureFirewallResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Provide full resourceId of Azure Firewall if used as DNS proxy"
      }
    }
  },
  "variables": {
    "addsSubnet": "adds",
    "udrRoute": "subnet-to-azureFirewall",
    "ddosProtectionPlanId": {
      "id": "[parameters('ddosPlanResourceId')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "[take(concat('IdentityConnectivity-', guid(deployment().name)), 64)]",
      "location": "[parameters('location')]",
      "resourceGroup": "[parameters('networkWatcherRg')]",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "comments": "Deploy Resource Group Lock",
              "type": "Microsoft.Authorization/locks",
              "apiVersion": "2016-09-01",
              "name": "ResourceGroup-DontDelete",
              "properties": {
                "level": "CanNotDelete",
                "notes": "Prevent deletion of the resourceGroup"
              }
            },
            {
              "comments": "Deploy Network Watcher",
              "condition": "[and(equals(parameters('enableIdentitySpoke'), 'Yes'), not(empty(parameters('identitySubscriptionId'))))]",
              "type": "Microsoft.Network/networkWatchers",
              "apiVersion": "2020-05-01",
              "name": "[parameters('networkWatcher')]",
              "location": "[parameters('location')]",
              "tags": {},
              "properties": {},
              "resources": []
            }
          ]
        }
      }
    },
    {
      "comments": "Nested deployment for Azure Network Resources",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[take(concat('IdentityConnectivity-', guid(deployment().name)), 64)]",
      "resourceGroup": "[parameters('networkRg')]",
      "dependsOn": [
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "comments": "Deploy Resource Group Lock",
              "type": "Microsoft.Authorization/locks",
              "apiVersion": "2016-09-01",
              "name": "ResourceGroup-DontDelete",
              "properties": {
                "level": "CanNotDelete",
                "notes": "Prevent deletion of the resourceGroup"
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-04-01",
              "name": "[parameters('vnet')]",
              "location": "[parameters('location')]",
              "dependsOn": [],
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('IdentityAddressPrefix')]"
                  ]
                },
                "enableDdosProtection": "[if(equals(parameters('enableDdoS'), 'Yes'), 'true', 'false')]",
                "ddosProtectionPlan": "[if(equals(parameters('enableDdoS'), 'Yes'), variables('ddosProtectionPlanId'), json('null'))]"
                /*
                "dhcpOptions": {
                  "dnsServers": "[if(
                                       not(
                                           empty(
                                                 parameters('azureFirewallResourceId'))), 
                                                 array(reference(parameters('azureFirewallResourceId'), '2020-05-01').ipConfigurations[0].properties.privateIPAddress), 
                                                 parameters('dnsServers'))]"
                }*/
              }
            },
            {
              "comments": "Conditional deployment of Route Table",
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2020-04-01",
              "name": "test",
              "location": "[parameters('location')]",
              "properties": {
                "routes": [
                  {
                    "name": "[variables('udrRoute')]",
                    "properties": {
                      "addressPrefix": "0.0.0.0/0",
                      "nextHopType": "VirtualAppliance",
                      "nextHopIpAddress": "1.1.1.1"
                    }
                  }
                ]
              }
            },
            {
              "comments": "Conditional deployment of adds Subnet",
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2020-04-01",
              "name": "[concat(parameters('vnet'), '/', variables('addsSubnet'))]",
              "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet'))]"
              ],
              "properties": {
                "addressPrefix": "[parameters('IdentityAddressPrefix')]"
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2020-05-01",
              "name": "[concat(parameters('vnet'), '/peerToHub')]",
              "dependsOn": [
                "[parameters('vnet')]"
              ],
              "properties": {
                "remoteVirtualNetwork": {
                  "id": "[parameters('hubResourceId')]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": true,
                "useRemoteGateways": "[parameters('vNetPeerUseRemoteGateway')]"
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-06-01",
              "name": "[concat('es-lz-hub-',substring(uniqueString(subscription().id),0,6),'-peering')]",
              "subscriptionId": "[split(parameters('hubResourceId'),'/')[2]]",
              "resourceGroup": "[split(parameters('hubResourceId'),'/')[4]]",
              "dependsOn": [
                "[parameters('vnet')]"
              ],
              "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "parameters": {
                  "remoteVirtualNetwork": {
                    "value": "[concat(subscription().id,'/resourceGroups/',parameters('networkRg'), '/providers/','Microsoft.Network/virtualNetworks/', parameters('vnet'))]"
                  },
                  "hubName": {
                    "value": "[split(parameters('hubResourceId'),'/')[8]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "remoteVirtualNetwork": {
                      "type": "String",
                      "defaultValue": false
                    },
                    "hubName": {
                      "type": "String",
                      "defaultValue": false
                    }
                  },
                  "variables": {},
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                      "name": "[[concat(parameters('hubName'),'/',last(split(parameters('remoteVirtualNetwork'),'/')))]",
                      "apiVersion": "2020-05-01",
                      "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": true,
                        "allowGatewayTransit": true,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                          "id": "[[parameters('remoteVirtualNetwork')]"
                        }
                      }
                    }
                  ],
                  "outputs": {}
                }
              }
            }
          ],
          "outputs": {}
        }
      }
    }
  ],
  "outputs": {}
}