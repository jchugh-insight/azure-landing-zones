{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "companyPrefix": {
            "type": "string",
            "maxLength": 5
        },
        "locationPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "environmentPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "akvPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "paToken": {
            "type": "securestring"
        },
        "principalId": {
            "type": "array"
        },
        "principalSecret": {
            "type": "securestring"
        },
        "gitHubUserNameOrOrg": {
            "type": "string"
        },
        "appId": {
            "type": "string"
        },
        "repositoryName": {
            "type": "string"
        }
    },
    "variables": {
        "formattingPrincipalIdToString": "[replace(replace(replace(string(parameters('principalId')), '\"', ''), '[', ''), ']', '')]",
        "namingPrefix": "[concat(parameters('companyPrefix'), '-', parameters('locationPrefix'), '-', parameters('environmentPrefix'))]",
        "keyVaultName": "[toLower(take(concat(variables('namingPrefix'), '-', parameters('akvPrefix'), '-', guid(parameters('companyPrefix'))), 24))]",
        "keyVaultRbacName": "[concat(variables('keyVaultName'), '/Microsoft.Authorization/', guid(variables('keyVaultName')))]",
        "keyVaultSku": "Standard",
        "enabledForDeployment": true,
        "enabledForDiskEncryption": true,
        "enabledForTemplateDeployment": true,
        "enableRbacAuthorization": true,
        "enablePurgeProtection": true,
        "enableSoftDelete": true,
        "patSecretName": "PATSecret",
        "spnSecretName": "SPNSecret",
        "userManagedIdentityName": "[toLower(concat(variables('namingPrefix'), '-umi-azops'))]",
        "deploymentScriptName": "[toLower(concat(variables('namingPrefix'), '-ps1-azops'))]",
        "rbac": {
            "keyVaultAdmin": "/providers/Microsoft.Authorization/roleDefinitions/00482a5a-887f-4fb3-b363-3b7fe8e74483"
        },
        "apiVersions": {
            "KeyVault": "2019-09-01",
            "deploymentScripts": "2020-10-01",
            "userAssignedIdentities": "2018-11-30"
        }
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "[variables('apiVersions').userAssignedIdentities]",
            "name": "[variables('userManagedIdentityName')]",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "[variables('apiVersions').KeyVault]",
            "name": "[variables('keyVaultName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('userManagedIdentityName')]"
            ],
            "properties": {
                "enabledForDeployment": "[variables('enabledForDeployment')]",
                "enabledForDiskEncryption": "[variables('enabledForDiskEncryption')]",
                "enabledForTemplateDeployment": "[variables('enabledForTemplateDeployment')]",
                "enableRbacAuthorization": "[variables('enableRbacAuthorization')]",
                "enablePurgeProtection": "[variables('enablePurgeProtection')]",
                "enableSoftDelete": "[variables('enableSoftDelete')]",
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "name": "[variables('keyVaultSku')]",
                    "family": "A"
                },
                "networkAcls": {
                    "defaultAction": "Allow",
                    "bypass": "AzureServices",
                    "ipRules": [
                    ],
                    "virtualNetworkRules": []
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "[variables('apiVersions').KeyVault]",
            "name": "[concat(variables('keyVaultName'), '/', variables('patSecretName'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "properties": {
                "value": "[parameters('paToken')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "[variables('apiVersions').KeyVault]",
            "name": "[concat(variables('keyVaultName'), '/', variables('spnSecretName'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "properties": {
                "value": "[parameters('principalSecret')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/providers/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('keyVaultRbacName')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userManagedIdentityName'))]"
            ],
            "properties": {
                "principalType": "ServicePrincipal",
                "principalId": "[reference(variables('userManagedIdentityName'), '2018-11-30').principalId]",
                "roleDefinitionId": "[variables('rbac').keyVaultAdmin]"
            }
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "[variables('apiVersions').deploymentScripts]",
            "name": "[variables('deploymentScriptName')]",
            "location": "[resourceGroup().location]",
            "kind": "AzurePowerShell",
            "identity": {
                "type": "userAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userManagedIdentityName'))]": {}
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/providers/roleAssignments', variables('keyVaultName'), 'Microsoft.Authorization', guid(variables('keyVaultName')))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('patSecretName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('spnSecretName'))]"
            ],
            "properties": {
                "primaryScriptUri": "[base64ToString('aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2tybmVzZS9ucy9tYXN0ZXIvdW1pQXpPcHNTZXR1cC5wczE=')]",
                "arguments": "[concat('-KeyVault', ' ', variables('keyVaultName'), ' ',
                                      '-NewRepositoryName', ' ', parameters('repositoryName'), ' ',
                                      '-GitHubUserNameOrOrg', ' ', parameters('gitHubUserNameOrOrg'), ' ', 
                                      '-SPNSecretName', ' ', variables('spnSecretName'), ' ',
                                      '-SpnAppId', ' ', parameters('appId'), ' ',
                                      '-PATSecretName', ' ', variables('patSecretName'), ' ',
                                      '-AzureTenantId', ' ', subscription().tenantId, ' ',
                                      '-EnterpriseScalePrefix', ' ', parameters('companyPrefix'), ' ',
                                      '-AzureSubscriptionId', ' ', subscription().subscriptionId)]",
                "azPowerShellVersion": "5.5",
                "timeout": "PT30M",
                "cleanupPreference": "Always",
                "retentionInterval": "P1D"
            }
        }
    ],
    "outputs": {
        "umi": {
            "type": "string",
            "value": "[reference(variables('userManagedIdentityName'), '2018-11-30').principalId]"
        }
    }
}