{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "targetMG": {
            "type": "string"
        },
        "listOfResourceTypesWithDiagnosticLogsEnabled": {
            "type": "array",
            "defaultvalue": [
                "Microsoft.ApiManagement/service",
                "Microsoft.AnalysisServices/servers",
                "Microsoft.Network/applicationGateways",
                "Microsoft.Automation/automationAccounts",
                "Microsoft.ContainerInstance/containerGroups",
                "Microsoft.ContainerRegistry/registries",
                "Microsoft.ContainerService/managedClusters",
                "Microsoft.Batch/batchAccounts",
                "Microsoft.Cdn/profiles/endpoints",
                "Microsoft.CognitiveServices/accounts",
                "Microsoft.DocumentDB/databaseAccounts",
                "Microsoft.DataFactory/factories",
                "Microsoft.DataLakeAnalytics/accounts",
                "Microsoft.DataLakeStore/accounts",
                "Microsoft.EventGrid/eventSubscriptions",
                "Microsoft.EventGrid/topics",
                "Microsoft.EventHub/namespaces",
                "Microsoft.Network/expressRouteCircuits",
                "Microsoft.Network/azureFirewalls",
                "Microsoft.HDInsight/clusters",
                "Microsoft.Devices/IotHubs",
                "Microsoft.KeyVault/vaults",
                "Microsoft.Network/loadBalancers",
                "Microsoft.Logic/integrationAccounts",
                "Microsoft.Logic/workflows",
                "Microsoft.DBforMySQL/servers",
                "Microsoft.Network/networkInterfaces",
                "Microsoft.Network/networkSecurityGroups",
                "Microsoft.DBforPostgreSQL/servers",
                "Microsoft.PowerBIDedicated/capacities",
                "Microsoft.Network/publicIPAddresses",
                "Microsoft.RecoveryServices/vaults",
                "Microsoft.Cache/redis",
                "Microsoft.Relay/namespaces",
                "Microsoft.Search/searchServices",
                "Microsoft.ServiceBus/namespaces",
                "Microsoft.SignalRService/SignalR",
                "Microsoft.Sql/servers/databases",
                "Microsoft.Sql/servers/elasticPools",
                "Microsoft.StreamAnalytics/streamingjobs",
                "Microsoft.TimeSeriesInsights/environments",
                "Microsoft.Network/trafficManagerProfiles",
                "Microsoft.Compute/virtualMachines",
                "Microsoft.Compute/virtualMachineScaleSets",
                "Microsoft.Network/virtualNetworks",
                "Microsoft.Network/virtualNetworkGateways"
            ]
        },
        "listOfLocations": {
        "type": "Array",
            "defaultvalue": [
                "australiaeast"
            ]
      }
    },
    "variables": {
        "scope": {
            "managementGroup": "[tenantResourceId('Microsoft.Management/managementGroups', parameters('targetMG'))]"
        },
        "initiatives": {
            "policySetDefinitions": {
                "iso27001": "/providers/Microsoft.Authorization/policySetDefinitions/89c6cddc-1c73-4ac1-b19c-54d1a15a42f2",
                "azurecis": "/providers/Microsoft.Authorization/policySetDefinitions/612b5213-9160-4969-8578-1518bd2a000c",
                "asb": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8"
            }
        },
        "policyAssignment": {
            "iso27001": {
                "name": "iso-27001-initiative",
                "displayName": "ISO 27001:2013 Initiative"
            },
            "azurecis": {
                "name": "cis-1.3.0-initiative",
                "displayName": "Azure CIS v1.3.0 Initiative"
            },
            "asb": {
                "name": "azure-sec-benchmark",
                "displayName": "Azure Security Benchmark"
            }
        },
        "roleAssignmentNames": {
            "deployIso27001": "[guid(concat(parameters('targetMG'),variables('policyAssignment').iso27001.name))]"
        },
        "rbac": {
            "contributor": "b24988ac-6180-42a0-ab88-20f7382dd24c"
        },
        "apiVersions": {
            "policySetDefinitions": "2018-05-01",
            "policyAssignments": "2020-03-01",
            "roleAssignments": "2020-04-01-preview"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "[variables('apiVersions').policyAssignments]",
            "name": "[variables('policyAssignment').iso27001.name]",
            "location": "[deployment().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "description": "This initiative includes audit and virtual machine extension deployment policies that address a subset of ISO 27001:2013 controls.",
                "displayName": "[variables('policyAssignment').iso27001.displayName]",
                "policyDefinitionId": "[variables('initiatives').policySetDefinitions.iso27001]",
                "scope": "[variables('scope').managementGroup]",
                "parameters": {
                    "listOfResourceTypesWithDiagnosticLogsEnabled": {
                        "value": "[parameters('listOfResourceTypesWithDiagnosticLogsEnabled')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "[variables('apiVersions').policyAssignments]",
            "name": "[variables('policyAssignment').azurecis.name]",
            "location": "[deployment().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "description": "This initiative includes policies that address a subset of CIS Microsoft Azure Foundations Benchmark recommendations.",
                "displayName": "[variables('policyAssignment').azurecis.displayName]",
                "policyDefinitionId": "[variables('initiatives').policySetDefinitions.azurecis]",
                "scope": "[variables('scope').managementGroup]",
                "parameters": {
                    "listOfLocations": {
                        "value": "[parameters('listOfLocations')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "[variables('apiVersions').policyAssignments]",
            "name": "[variables('policyAssignment').asb.name]",
            "location": "[deployment().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "description": "The Azure Security Benchmark initiative represents the policies and controls implementing security recommendations defined in Azure Security Benchmark v2.",
                "displayName": "[variables('policyAssignment').asb.displayName]",
                "policyDefinitionId": "[variables('initiatives').policySetDefinitions.asb]",
                "scope": "[variables('scope').managementGroup]",
                "parameters": {
                }
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "[variables('apiVersions').roleAssignments]",
            "name": "[variables('roleAssignmentNames').deployIso27001]",
            "dependsOn": [
                "[variables('policyAssignment').iso27001.name]"
            ],
            "properties": {
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[concat('/providers/Microsoft.Authorization/roleDefinitions/', variables('rbac').contributor)]",
                "principalId": "[toLower(reference(concat('/providers/Microsoft.Authorization/policyAssignments/', variables('policyAssignment').iso27001.name), '2018-05-01', 'Full' ).identity.principalId)]"
            }
        }
    ],
    "outputs": {
    }
}
