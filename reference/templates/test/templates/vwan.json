{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/tenantDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "companyPrefix": {
            "type": "string",
            "maxLength": 5,
            "metadata": {
                "description": "Provide the prefix (max 5 characters) to the management group hierarchy that will be created"
            }
        },
        "locationPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the location identifier prefix (3 characters)"
            }
        },
        "environmentPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the environment identifier prefix (3 characters)"
            }
        },
        "argPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the resource group identifier"
            }
        },
        "omsPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the log analytics identifier prefix"
            }
        },
        "aaaPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the Azure Automation identifier prefix"
            }
        },
        "staPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the Azure Storage identifier prefix"
            }
        },
        "akvPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the Azure Key Vault identifier prefix"
            }
        },
        "rsvPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the Recovery Services Vault prefix"
            }
        },
        "vngPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the virtual network gateway identifier prefix"
            }
        },
        "vHubPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the virtual Hub prefix"
            }
        },
        "vWanPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the virtual WAN prefix"
            }
        },
        "pipPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the public IP identifier prefix"
            }
        },
        "azFwPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the Azure Firewall identifier prefix"
            }
        },
        "udrPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the Route Table identifier prefix"
            }
        },
        "nsgPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the Network Security Group identifier prefix"
            }
        },
        "basPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the Azure Bastion prefix"
            }
        },
        "ddosPrefix": {
            "type": "string",
            "maxLength": 4,
            "metadata": {
                "description": "Provide the Azure DDoS Protection prefix"
            }
        },
        "subscriptionTag": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Provide the value for the environment tag"
            }
        },
        "ownerTag": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Provide the value for the owner tag"
            }
        },
        "costCenterTag": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Provide the value for the cost center tag"
            }
        },
        "managementSubscriptionId": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 36,
            "metadata": {
                "description": "Provide the subscription id of an existing, empty subscription you want to dedicate for management. If you don't want to bring a subscription, leave this parameter empty as is."
            }
        },
        "connectivitySubscriptionId": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 36,
            "metadata": {
                "description": "Provide the subscription id of an existing, empty subscription you want to dedicate for networking."
            }
        },
        "identitySubscriptionId": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 36,
            "metadata": {
                "description": "Provide the subscription id of an existing, empty subscription you want to dedicate for identity."
            }
        },
        "denySubnetWithoutNsgForIdentity": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "denyRdpForIdentity": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "denyPipForIdentity": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "enableVmBackupForIdentity": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "enableLogAnalytics": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected when also adding a subscription for management, ARM will assign two policies to enable auditing in your environment, into the Log Analytics workspace for platform monitoring. If 'No', it will be ignored."
            }
        },
        "retentionInDays": {
            "type": "string",
            "defaultValue": ""
        },
        "enableAsc": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected when also adding a subscription for management, ARM will assign two policies to enable auditing in your environment, into the Log Analytics workspace for platform monitoring. If 'No', it will be ignored."
            }
        },
        "emailContactAsc": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Provide the Azure Security Center Email Contact"
            }
        },
        "enableAksPolicy": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "enableAscForServers": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForAppServices": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForStorage": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForSql": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForSqlOnVm": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForKeyVault": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForArm": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForDns": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForKubernetes": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForRegistries": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableSecuritySolution": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "denyAksPrivileged": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "denyAksPrivilegedEscalation": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "denyHttpIngressForAks": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "enableArcMonitoring": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected, policy will be assigned to enforce Arc monitoring."
            }
        },
        "enableVmMonitoring": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected, policy will be assigned to enforce VM monitoring."
            }
        },
        "enableVmssMonitoring": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected, policy will be assigned to enforce VMSS monitoring."
            }
        },
        "enableAgentHealth": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "enableChangeTracking": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "enableUpdateMgmt": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "enableActivityLog": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "enableAntiMalware": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "enableVmInsights": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "enableServiceMap": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "enableSqlAssessment": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "enableKeyVaultAnalytics": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "enableSqlEncryption": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "enableVmBackup": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "enableStorage": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected then an Azure Storage Account will be deployed."
            }
        },
        "enableLtrStorage": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected then Long Term Retention to Storage will be enabled."
            }
        },
        "enableRsv": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected then a Recovery Services Vault will be deployed."
            }
        },
        "denyRdp": {
            "type": "string",
            "defaultValue": "yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "enableStorageHttps": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "enableIdentity": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected then the Identity Subscription will be enabled."
            }
        },
        "denyIpForwarding": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "denySubnetWithoutNsg": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "addressPrefix": {
            "type": "string",
            "defaultValue": ""
        },
        "enableVpnGw": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "enableErGw": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "location": {
            "type": "string",
            "defaultValue": "[deployment().location]"
        },
        "enableVwan": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "enableAzFw": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "enablePrivateDnsZones": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "enablePrivateDnsZonesTable": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "enablePrivateDnsZonesQueue": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "enablePrivateDnsZonesFiles": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "enablePrivateDnsZonesBlob": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "enablePrivateDnsZonesAkv": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        }
    },
    "variables": {
        "azPolicyEnvMapping": {
            "https://management.azure.com/": "hub/policies.json"
        },
        "azEnvPolicy": "[variables('azPolicyEnvMapping')[environment().resourceManager]]",
        "deploymentUris": {
            "managementGroups": "[uri(deployment().properties.templateLink.uri, 'hub/mgmtGroups.json')]",
            "policyDefinitions": "[concat(uri(deployment().properties.templateLink.uri, variables('azEnvPolicy')))]",
            "monitoring": "[uri(deployment().properties.templateLink.uri, 'hub/logAnalytics.json')]",
            "monitoringSolutions": "[uri(deployment().properties.templateLink.uri, 'hub/logAnalyticsSolutions.json')]",
            "storage": "[uri(deployment().properties.templateLink.uri, 'hub/storage.json')]",
            "recoveryServicesVault": "[uri(deployment().properties.templateLink.uri, 'hub/recoveryServicesVault.json')]",
            "privateDns": "[uri(deployment().properties.templateLink.uri, 'hub/privateDns.json')]",
            "landingZone": "[uri(deployment().properties.templateLink.uri, 'hub/lz.json')]",
            "diagnosticsAndSecurity": "[uri(deployment().properties.templateLink.uri, 'hub/diagnosticsAndSecurity.json')]",
            "connectivity": "[uri(deployment().properties.templateLink.uri, 'hub/vwan-connectivity.json')]",
            "identity": "[uri(deployment().properties.templateLink.uri, 'hub/identity.json')]",
            "azOps": "[uri(deployment().properties.templateLink.uri, 'hub/azOpsSetup.json')]"
        },
        "moveSubscription": {
            "management": "[concat(parameters('companyPrefix'), '-management', '/', parameters('managementSubscriptionId'))]",
            "connectivity": "[concat(parameters('companyPrefix'), '-connectivity', '/', parameters('connectivitySubscriptionId'))]",
            "identity": "[concat(parameters('companyPrefix'), '-identity', '/', parameters('identitySubscriptionId'))]"

        },
        "noSubscription": {
            "management": "[concat(parameters('companyPrefix'), '-management', '/', 'na')]",
            "connectivity": "[concat(parameters('companyPrefix'), '-connectivity', '/', 'naconn')]",
            "identity": "[concat(parameters('companyPrefix'), '-identity', '/', 'naid')]",
            "corp": "[concat(parameters('companyPrefix'), '-corp', '/', 'nalz')]",
            "online": "[concat(parameters('companyPrefix'), '-online', '/', 'nalz')]"
        },
        "deploymentNames": {
            "managementGroups": "[take(concat('mgmtGroups', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
            "policyDefinitions": "[take(concat('policyDef', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
            "monitoring": "[take(concat('monitoring', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
            "monitoringSolutions": "[take(concat('monSolutions', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
            "diagnosticsAndSecurity": "[take(concat('diagSecurity', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
            "connectivity": "[take(concat('vWanConn', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
            "landingZone": "[take(concat('lz', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
            "storage": "[take(concat('storage', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
            "recoveryServicesVault": "[take(concat('rsv', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
            "privateDns": "[take(concat('privateDns', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
            "identity": "[take(concat('identity', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
            "azOps": "[take(concat('azOps', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]"
        },
        "apiVersions": {
            "deployments": "2020-06-01",
            "subscriptions": "2020-05-01"
        }
    },
    "resources": [
        {
            "comments": "// Linked template for the creation of Management Groups",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "name": "[variables('deploymentNames').managementGroups]",
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').managementGroups]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    }
                }
            }
        },
        {
            "comments": "// Linked template for the creation of Azure Policy Definitions",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "name": "[variables('deploymentNames').policyDefinitions]",
            "location": "[deployment().location]",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('companyPrefix'))]",
            "dependsOn": [
                "[variables('deploymentNames').managementGroups]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').policyDefinitions]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    }
                }
            }
        },
        {
            "comments": "// nested template for delay counter",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "name": "[concat('preparingToLaunch', copyIndex())]",
            "location": "[deployment().location]",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('companyPrefix'))]",
            "dependsOn": [
                "[variables('deploymentNames').policyDefinitions]"
            ],
            "copy": {
                "batchSize": 1,
                "count": 20,
                "mode": "Serial",
                "name": "policyCompletion"
            },
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [],
                    "outputs": {}
                }
            }
        },
        {
            "comments": "// Move the Subscription to the appropriate Management Group",
            "condition": "[not(empty(parameters('managementSubscriptionId')))]",
            "type": "Microsoft.Management/managementGroups/subscriptions",
            "apiVersion": "[variables('apiVersions').subscriptions]",
            "name": "[if(not(empty(parameters('managementSubscriptionId'))), variables('moveSubscription').management, variables('noSubscription').management)]",
            "dependsOn": [
                "[variables('deploymentNames').managementGroups]"
            ],
            "properties": {}
        },
        // Move the Subscription to the appropriate Management Group or skip if not used. (Identity Subscription)
        {
            "condition": "[not(empty(parameters('identitySubscriptionId')))]",
            "type": "Microsoft.Management/managementGroups/subscriptions",
            "apiVersion": "[variables('apiVersions').subscriptions]",
            "name": "[if(not(empty(parameters('identitySubscriptionId'))), variables('moveSubscription').identity, variables('noSubscription').identity)]",
            "dependsOn": [
                "[variables('deploymentNames').managementGroups]"
            ],
            "properties": {}
        },
        // Move the Subscription to the appropriate Management Group or skip if not used. (Connectivity Subscription)
        {
            "condition": "[not(empty(parameters('connectivitySubscriptionId')))]",
            "type": "Microsoft.Management/managementGroups/subscriptions",
            "apiVersion": "[variables('apiVersions').subscriptions]",
            "name": "[if(not(empty(parameters('connectivitySubscriptionId'))), variables('moveSubscription').connectivity, variables('noSubscription').connectivity)]",
            "dependsOn": [
                "[variables('deploymentNames').managementGroups]"
            ],
            "properties": {}
        },
        {
            "comments": "// Linked template for the creation of Log Analytics in the Platform Management Subscription.",
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('companyPrefix'), '-management')]",
            "name": "[variables('deploymentNames').monitoring]",
            "dependsOn": [
                "[variables('deploymentNames').policyDefinitions]",
                "policyCompletion"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').monitoring]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "argPrefix": {
                        "value": "[parameters('argPrefix')]"
                    },
                    "omsPrefix": {
                        "value": "[parameters('omsPrefix')]"
                    },
                    "aaaPrefix": {
                        "value": "[parameters('aaaPrefix')]"
                    },
                    "managementSubscriptionId": {
                        "value": "[parameters('managementSubscriptionId')]"
                    },
                    "enableLogAnalytics": {
                        "value": "[parameters('enableLogAnalytics')]"
                    },
                    "retentionInDays": {
                        "value": "[parameters('retentionInDays')]"
                    }
                }
            }
        },
        {
            "comments": "// Linked template for the creation of Log Analytics Solutions in the Platform Subscription.",
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))), or(or(or(or(or(equals(parameters('enableSecuritySolution'), 'Yes'), equals(parameters('enableAgentHealth'), 'Yes')), equals(parameters('enableChangeTracking'), 'Yes')), equals(parameters('enableUpdateMgmt'), 'Yes'), equals(parameters('enableActivityLog'), 'Yes')), equals(parameters('enableAntiMalware'), 'Yes'), equals(parameters('enableVmInsights'), 'Yes')), equals(parameters('enableServiceMap'), 'Yes'), equals(parameters('enableSqlAssessment'), 'Yes'), equals(parameters('enableKeyVaultAnalytics'), 'Yes')))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "subscriptionId": "[parameters('managementSubscriptionId')]",
            "name": "[variables('deploymentNames').monitoringSolutions]",
            "dependsOn": [
                "[variables('deploymentNames').monitoring]"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').monitoringSolutions]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "argPrefix": {
                        "value": "[parameters('argPrefix')]"
                    },
                    "omsPrefix": {
                        "value": "[parameters('omsPrefix')]"
                    },
                    "managementSubscriptionId": {
                        "value": "[parameters('managementSubscriptionId')]"
                    },
                    "enableSecuritySolution": {
                        "value": "[parameters('enableSecuritySolution')]"
                    },
                    "enableAgentHealth": {
                        "value": "[parameters('enableAgentHealth')]"
                    },
                    "enableChangeTracking": {
                        "value": "[parameters('enableChangeTracking')]"
                    },
                    "enableUpdateMgmt": {
                        "value": "[parameters('enableUpdateMgmt')]"
                    },
                    "enableActivityLog": {
                        "value": "[parameters('enableActivityLog')]"
                    },
                    "enableAntiMalware": {
                        "value": "[parameters('enableAntiMalware')]"
                    },
                    "enableVmInsights": {
                        "value": "[parameters('enableVmInsights')]"
                    },
                    "enableServiceMap": {
                        "value": "[parameters('enableServiceMap')]"
                    },
                    "enableSqlAssessment": {
                        "value": "[parameters('enableSqlAssessment')]"
                    },
                    "enableKeyVaultAnalytics": {
                        "value": "[parameters('enableKeyVaultAnalytics')]"
                    },
                    "subscriptionTag": {
                        "value": "[parameters('subscriptionTag')]"
                    },
                    "ownerTag": {
                        "value": "[parameters('ownerTag')]"
                    },
                    "costCenterTag": {
                        "value": "[parameters('costCenterTag')]"
                    }
                }
            }
        },
        {
            "comments": "// Linked template for the creation of Recovery Services Vaults",
            "condition": "[and(not(empty(parameters('identitySubscriptionId'))),equals(parameters('enableRsv'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "subscriptionId": "[parameters('identitySubscriptionId')]",
            "name": "[variables('deploymentNames').recoveryServicesVault]",
            "dependsOn": [
                "policyCompletion"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').recoveryServicesVault]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "argPrefix": {
                        "value": "[parameters('argPrefix')]"
                    },
                    "rsvPrefix": {
                        "value": "[parameters('rsvPrefix')]"
                    },
                    "enableRsv": {
                        "value": "[parameters('enableRsv')]"
                    },
                    "identitySubscriptionId": {
                        "value": "[parameters('identitySubscriptionId')]"
                    },
                    "subscriptionTag": {
                        "value": "[parameters('subscriptionTag')]"
                    },
                    "ownerTag": {
                        "value": "[parameters('ownerTag')]"
                    },
                    "costCenterTag": {
                        "value": "[parameters('costCenterTag')]"
                    }
                }
            }
        },
        {
            "comments": "// Linked template for the creation of Azure Storage.",
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableStorage'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "subscriptionId": "[parameters('managementSubscriptionId')]",
            "name": "[variables('deploymentNames').storage]",
            "dependsOn": [
                "policyCompletion"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').storage]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "argPrefix": {
                        "value": "[parameters('argPrefix')]"
                    },
                    "staPrefix": {
                        "value": "[parameters('staPrefix')]"
                    },
                    "enableStorage": {
                        "value": "[parameters('enableStorage')]"
                    },
                    "subscriptionTag": {
                        "value": "[parameters('subscriptionTag')]"
                    },
                    "ownerTag": {
                        "value": "[parameters('ownerTag')]"
                    },
                    "costCenterTag": {
                        "value": "[parameters('costCenterTag')]"
                    }
                }
            }
        },
        {
            "comments": "// Linked template for the creation of Identity Subscription",
            "condition": "[not(empty(parameters('identitySubscriptionId')))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('companyPrefix'), '-identity')]",
            "name": "[variables('deploymentNames').identity]",
            "dependsOn": [
                "[variables('deploymentNames').policyDefinitions]",
                "DeploymentDelay"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').identity]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "argPrefix": {
                        "value": "[parameters('argPrefix')]"
                    },
                    "enableIdentity": {
                        "value": "[parameters('enableIdentity')]"
                    },
                    "denyRdpForIdentity": {
                        "value": "[parameters('denyRdpForIdentity')]"
                    },
                    "denySubnetWithoutNsgForIdentity": {
                        "value": "[parameters('denySubnetWithoutNsgForIdentity')]"
                    },
                    "denyPipForIdentity": {
                        "value": "[parameters('denyPipForIdentity')]"
                    },
                    "enableVmBackupForIdentity": {
                        "value": "[parameters('enableVmBackupForIdentity')]"
                    },
                    "identitySubscriptionId": {
                        "value": "[parameters('identitySubscriptionId')]"
                    }
                }
            }
        },
        {
            "comments": "// Linked template for Azure Policy Assignments for Landing Zones.",
            "condition": "[or(or(or(or(or(or(equals(parameters('enableVmBackup'), 'Yes'), equals(parameters('enableSqlAudit'), 'Yes')), equals(parameters('denyAksPrivilegedEscalation'), 'Yes'), equals(parameters('denyHttpIngressForAks'), 'Yes')), equals(parameters('denyAksPrivileged'), 'Yes'), equals(parameters('denyAksPrivileged'), 'Yes')), equals(parameters('denySubnetWithoutNsg'), 'Yes'), equals(parameters('enableSqlAssessment'), 'Yes')), equals(parameters('enableVmMonitoring'), 'Yes'), equals(parameters('enableVmMonitoring'), 'Yes')), equals(parameters('enableSqlEncryption'), 'Yes'), equals(parameters('enableStorageHttps'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('companyPrefix'), '-landingzones')]",
            "name": "[variables('deploymentNames').landingZone]",
            "dependsOn": [
                "[variables('deploymentNames').policyDefinitions]",
                "policyCompletion"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').landingZone]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "denyHttpIngressForAks": {
                        "value": "[parameters('denyHttpIngressForAks')]"
                    },
                    "denyAksPrivilegedEscalation": {
                        "value": "[parameters('denyAksPrivilegedEscalation')]"
                    },
                    "denyAksPrivileged": {
                        "value": "[parameters('denyAksPrivileged')]"
                    },
                    "enableSqlAudit": {
                        "value": "[parameters('enableSqlAudit')]"
                    },
                    "enableSqlEncryption": {
                        "value": "[parameters('enableSqlEncryption')]"
                    },
                    "enableVmBackup": {
                        "value": "[parameters('enableVmBackup')]"
                    },
                    "denyRdp": {
                        "value": "[parameters('denyRdp')]"
                    },
                    "enableAksPolicy": {
                        "value": "[parameters('enableAksPolicy')]"
                    },
                    "enableStorageHttps": {
                        "value": "[parameters('enableStorageHttps')]"
                    },
                    "denyIpForwarding": {
                        "value": "[parameters('denyIpForwarding')]"
                    },
                    "denySubnetWithoutNsg": {
                        "value": "[parameters('denySubnetWithoutNsg')]"
                    }
                }
            }
        },
        {
            "comments": "// Linked template for Diagnostics and Security controls for the Platform Subscriptions.",
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))), or(equals(parameters('enableLogAnalytics'), 'Yes'), equals(parameters('enableAsc'), 'Yes')))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('companyPrefix'))]",
            "name": "[variables('deploymentNames').diagnosticsAndSecurity]",
            "dependsOn": [
                "[variables('deploymentNames').monitoring]"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').diagnosticsAndSecurity]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "argPrefix": {
                        "value": "[parameters('argPrefix')]"
                    },
                    "omsPrefix": {
                        "value": "[parameters('omsPrefix')]"
                    },
                    "staPrefix": {
                        "value": "[parameters('staPrefix')]"
                    },
                    "enableLogAnalytics": {
                        "value": "[parameters('enableLogAnalytics')]"
                    },
                    "enableAsc": {
                        "value": "[parameters('enableAsc')]"
                    },
                    "emailContactAsc": {
                        "value": "[parameters('emailContactAsc')]"
                    },
                    "enableAscForServers": {
                        "value": "[parameters('enableAscForServers')]"
                    },
                    "enableAscForAppServices": {
                        "value": "[parameters('enableAscForAppServices')]"
                    },
                    "enableAscForStorage": {
                        "value": "[parameters('enableAscForStorage')]"
                    },
                    "enableAscForSql": {
                        "value": "[parameters('enableAscForSql')]"
                    },
                    "enableAscForSqlOnVm": {
                        "value": "[parameters('enableAscForSqlOnVm')]"
                    },
                    "enableAscForKeyVault": {
                        "value": "[parameters('enableAscForKeyVault')]"
                    },
                    "enableAscForArm": {
                        "value": "[parameters('enableAscForArm')]"
                    },
                    "enableAscForDns": {
                        "value": "[parameters('enableAscForDns')]"
                    },
                    "enableAscForKubernetes": {
                        "value": "[parameters('enableAscForKubernetes')]"
                    },
                    "enableAscForRegistries": {
                        "value": "[parameters('enableAscForRegistries')]"
                    },
                    "enableArcMonitoring": {
                        "value": "[parameters('enableArcMonitoring')]"
                    },
                    "enableVmMonitoring": {
                        "value": "[parameters('enableVmMonitoring')]"
                    },
                    "enableVmssMonitoring": {
                        "value": "[parameters('enableVmssMonitoring')]"
                    },
                    "enableLtrStorage": {
                        "value": "[parameters('enableLtrStorage')]"
                    },
                    "managementSubscriptionId": {
                        "value": "[parameters('managementSubscriptionId')]"
                    },
                    "identitySubscriptionId": {
                        "value": "[parameters('identitySubscriptionId')]"
                    },
                    "connectivitySubscriptionId": {
                        "value": "[parameters('connectivitySubscriptionId')]"
                    },
                    "subscriptionTag": {
                        "value": "[parameters('subscriptionTag')]"
                    },
                    "ownerTag": {
                        "value": "[parameters('ownerTag')]"
                    },
                    "costCenterTag": {
                        "value": "[parameters('costCenterTag')]"
                    }
                }
            }
        },
        {
            "comments": "// Linked template for Network Connectivity for the Platform Subscription.",
            "condition": "[and(not(empty(parameters('connectivitySubscriptionId'))),equals(parameters('enableVwan'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('companyPrefix'), '-connectivity')]",
            "name": "[variables('deploymentNames').connectivity]",
            "dependsOn": [
                "[variables('deploymentNames').diagnosticsAndSecurity]",
                "DeploymentDelay"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').connectivity]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "argPrefix": {
                        "value": "[parameters('argPrefix')]"
                    },
                    "vngPrefix": {
                        "value": "[parameters('vngPrefix')]"
                    },
                    "azFwPrefix": {
                        "value": "[parameters('azFwPrefix')]"
                    },
                    "vHubPrefix": {
                        "value": "[parameters('vHubPrefix')]"
                    },
                    "vWanPrefix": {
                        "value": "[parameters('vWanPrefix')]"
                    },
                    "enableVwan": {
                        "value": "[parameters('enableVwan')]"
                    },
                    "enableAzFw": {
                        "value": "[parameters('enableAzFw')]"
                    },
                    "addressPrefix": {
                        "value": "[parameters('addressPrefix')]"
                    },
                    "enableVpnGw": {
                        "value": "[parameters('enableVpnGw')]"
                    },
                    "enableErGw": {
                        "value": "[parameters('enableErGw')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "connectivitySubscriptionId": {
                        "value": "[parameters('connectivitySubscriptionId')]"
                    }
                }
            }
        },
        {
            "comments": "// Linked template for the creation of Private DNS.",
            "condition": "[and(not(empty(parameters('connectivitySubscriptionId'))),equals(parameters('enablePrivateDnsZones'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "subscriptionId": "[parameters('connectivitySubscriptionId')]",
            "name": "[variables('deploymentNames').privateDns]",
            "dependsOn": [
                "[variables('deploymentNames').diagnosticsAndSecurity]",
                "DeploymentDelay"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').privateDns]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "argPrefix": {
                        "value": "[parameters('argPrefix')]"
                    },
                    "enablePrivateDnsZones": {
                        "value": "[parameters('enablePrivateDnsZones')]"
                    },
                    "enablePrivateDnsZonesTable": {
                        "value": "[parameters('enablePrivateDnsZonesTable')]"
                    },
                    "enablePrivateDnsZonesQueue": {
                        "value": "[parameters('enablePrivateDnsZonesQueue')]"
                    },
                    "enablePrivateDnsZonesFiles": {
                        "value": "[parameters('enablePrivateDnsZonesFiles')]"
                    },
                    "enablePrivateDnsZonesBlob": {
                        "value": "[parameters('enablePrivateDnsZonesBlob')]"
                    },
                    "enablePrivateDnsZonesAkv": {
                        "value": "[parameters('enablePrivateDnsZonesAkv')]"
                    },
                    "connectivitySubscriptionId": {
                        "value": "[parameters('connectivitySubscriptionId')]"
                    },
                    "subscriptionTag": {
                        "value": "[parameters('subscriptionTag')]"
                    },
                    "ownerTag": {
                        "value": "[parameters('ownerTag')]"
                    },
                    "costCenterTag": {
                        "value": "[parameters('costCenterTag')]"
                    }
                }
            }
        },
        {
            "comments": "// Linked template for the creation of GitHub Repo.",
            "condition": "[and(equals(parameters('enableAzOps'), 'Yes'), not(empty(parameters('principalSecret'))))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('companyPrefix'))]",
            "name": "[variables('deploymentNames').azOps]",
            "location": "[deployment().location]",
            "dependsOn": [
                "[variables('deploymentNames').landingZone]",
                "[variables('deploymentNames').diagnosticsAndSecurity]",
                "[variables('deploymentNames').managementGroups]",
                "[variables('deploymentNames').monitoring]",
                "[variables('deploymentNames').monitoringSolutions]",
                "[variables('deploymentNames').policyDefinitions]",
                "[variables('deploymentNames').hubConnectivity]",
                "policyCompletion"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').azOps]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "argPrefix": {
                        "value": "[parameters('argPrefix')]"
                    },
                    "akvPrefix": {
                        "value": "[parameters('akvPrefix')]"
                    },
                    "principalId": {
                        "value": "[parameters('principalId')]"
                    },
                    "principalSecret": {
                        "value": "[parameters('principalSecret')]"
                    },
                    "gitHubUserNameOrOrg": {
                        "value": "[parameters('gitHubUserNameOrOrg')]"
                    },
                    "paToken": {
                        "value": "[parameters('paToken')]"
                    },
                    "managementSubscriptionId": {
                        "value": "[parameters('managementSubscriptionId')]"
                    },
                    "appId": {
                        "value": "[parameters('appId')]"
                    },
                    "repositoryName": {
                        "value": "[parameters('repositoryName')]"
                    },
                    "subscriptionTag": {
                        "value": "[parameters('subscriptionTag')]"
                    },
                    "ownerTag": {
                        "value": "[parameters('ownerTag')]"
                    },
                    "costCenterTag": {
                        "value": "[parameters('costCenterTag')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "deployment": {
            "type": "string",
            "value": "[concat(deployment().name, ' has successfully deployed. Welcome to Azure Foundations!')]"
        }
    }
}