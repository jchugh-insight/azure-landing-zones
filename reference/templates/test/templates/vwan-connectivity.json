{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "companyPrefix": {
            "type": "string",
            "maxLength": 5
        },
        "locationPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "environmentPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "argPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "vngPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "vHubPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "vWanPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "azFwPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "addressPrefix": {
            "type": "string",
            "metadata": {
                "displayName": "addressPrefix",
                "description": "Address prefix of the VHUB"
            },
            "defaultValue": "192.168.0.0/24"
        },
        "location": {
            "type": "string",
            "metadata": {
                "displayName": "location",
                "description": "Location of the VHUB"
            },
            "defaultValue": "[deployment().location]"
        },
        "enableVwan": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "enableAzFw": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "enableVpnGw": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "enableErGw": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "connectivitySubscriptionId": {
            "type": "string"
        }
    },
    "variables": {
        "deploymentName": "[take(concat(deployment().name, '-vwan'), 64)]",
        "namingPrefix": "[toLower(concat(parameters('companyPrefix'), '-', parameters('locationPrefix'), '-', parameters('environmentPrefix')))]",
        "resourceGroupName": "[toLower(concat(variables('namingPrefix'), '-', parameters('argPrefix'), '-network'))]",
        "vHubCidr": "[substring(parameters('addressPrefix'),0,sub(length(parameters('addressPrefix')), 3))]",
        "nwName": "[toLower(concat(variables('namingPrefix'), '-anw-', parameters('location')))]",
        "vWanName": "[toLower(take(concat(variables('namingPrefix'), '-', parameters('vWanPrefix'), '-', guid(parameters('companyPrefix'))), 24))]",
        "vHubName": "[toLower(concat(variables('namingPrefix'), '-', parameters('vHubPrefix'), '-', variables('vHubCidr')))]",
        "vpnGwName": "[toLower(concat(variables('namingPrefix'), '-', parameters('vngPrefix'), '-vpn'))]",
        "erGwName": "[toLower(concat(variables('namingPrefix'), '-', parameters('vngPrefix'), '-er'))]",
        "azFwName": "[toLower(take(concat(variables('namingPrefix'), '-', parameters('azFwPrefix'), '-', guid(parameters('companyPrefix'))), 24))]",
        "azFwPolicyName": "defaultAzFwPolicy",
        "vWanSku": "Standard",
        "vWanResourceId": "[concat('/subscriptions/', parameters('connectivitySubscriptionId'), '/resourceGroups/' ,variables('resourceGroupName'),'/providers/Microsoft.Network/virtualWans/', variables('vWanName'))]",
        "vWanHub": "[concat('/subscriptions/', parameters('connectivitySubscriptionId'), '/resourceGroups/', variables('resourceGroupName'),'/providers/Microsoft.Network/virtualHubs/', variables('vHubName'))]",
        "vHubSku": "Standard",
        "vpnBgpAsn": 65515,
        "apiVersions": {
            "deployments": "2020-06-01",
            "resourceGroups": "2020-06-01",
            "locks": "2016-09-01",
            "networkWatchers": "2019-11-01",
            "virtualNetworkGateways": "2020-05-01",
            "azureFirewalls": "2020-06-01",
            "firewallPolicies": "2020-06-01",
            "ruleCollectionGroups": "2020-06-01",
            "virtualWans": "2020-06-01",
            "virtualHubs": "2020-06-01",
            "expressRouteGateways": "2020-07-01"
        }
    },
    "resources": [
        // Subscription Level Deployment
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "name": "[concat(parameters('companyPrefix'), '-connectivitySub')]",
            "location": "[deployment().location]",
            "subscriptionId": "[parameters('connectivitySubscriptionId')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        // Deployment of the Network Resource Group
                        {
                            "condition": "[and(equals(parameters('enableVwan'), 'Yes'), not(empty(parameters('connectivitySubscriptionId'))))]",
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "[variables('apiVersions').resourceGroups]",
                            "location": "[deployment().location]",
                            "name": "[variables('resourceGroupName')]",
                            "properties": {}
                        },
                        // Resource Group Level Deployment
                        {
                            "type": "Microsoft.Resources/deployments",
                            "apiVersion": "[variables('apiVersions').deployments]",
                            "name": "[variables('deploymentName')]",
                            "resourceGroup": "[variables('resourceGroupName')]",
                            "dependsOn": [
                                "[concat('Microsoft.Resources/resourceGroups/', variables('resourceGroupName'))]"
                            ],
                            "properties": {
                                "mode": "Incremental",
                                "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "resources": [
                                        // Deployment of Resource Group Lock
                                        {
                                            "type": "Microsoft.Authorization/locks",
                                            "apiVersion": "[variables('apiVersions').locks]",
                                            "name": "ResourceGroup-DontDelete",
                                            "properties": {
                                                "level": "CanNotDelete",
                                                "notes": "Prevent deletion of the resourceGroup"
                                            }
                                        },
                                        // Deployment of vWAN resource
                                        {
                                            "condition": "[and(equals(parameters('enableVwan'), 'Yes'), not(empty(parameters('connectivitySubscriptionId'))))]",
                                            "type": "Microsoft.Network/virtualWans",
                                            "apiVersion": "[variables('apiVersions').virtualWans]",
                                            "name": "[variables('vWanName')]",
                                            "location": "[deployment().location]",
                                            "properties": {
                                                "disableVpnEncryption": false,
                                                "allowBranchToBranchTraffic": true,
                                                "allowVnetToVnetTraffic": true,
                                                "office365LocalBreakoutCategory": "None",
                                                "virtualHubs": [],
                                                "vpnSites": [],
                                                "type": "[variables('vWanSku')]"
                                            }
                                        },
                                        // Conditional deployment of Network Watcher
                                        {
                                            "condition": "[and(equals(parameters('enableVwan'), 'Yes'), not(empty(parameters('connectivitySubscriptionId'))))]",
                                            "type": "Microsoft.Network/networkWatchers",
                                            "apiVersion": "[variables('apiVersions').networkWatchers]",
                                            "name": "[variables('nwName')]",
                                            "location": "[deployment().location]",
                                            "tags": {},
                                            "properties": {},
                                            "resources": []
                                        },
                                        // Conditional deployment of Virtual Hub
                                        {
                                            "condition": "[and(equals(parameters('enableVwan'), 'Yes'), not(empty(parameters('addressPrefix'))))]",
                                            "type": "Microsoft.Network/virtualHubs",
                                            "apiVersion": "[variables('apiVersions').virtualHubs]",
                                            "location": "[deployment().location]",
                                            "name": "[variables('vHubName')]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/virtualWans/', variables('vWanName'))]"
                                            ],
                                            "properties": {
                                                "virtualWan": {
                                                    "id": "[variables('vWanResourceId')]"
                                                },
                                                "addressPrefix": "[parameters('addressPrefix')]",
                                                "sku": "[variables('vHubSku')]"
                                            }
                                        },
                                        // Conditional deployment of Virtual Network Gateway (S2S)
                                        {
                                            "condition": "[and(equals(parameters('enableVwan'), 'Yes'), equals(parameters('enableVpnGw'), 'Yes'))]",
                                            "type": "Microsoft.Network/vpnGateways",
                                            "apiVersion": "[variables('apiVersions').virtualNetworkGateways]",
                                            "name": "[variables('vpnGwName')]",
                                            "location": "[parameters('location')]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/virtualHubs/',variables('vHubName'))]"
                                            ],
                                            "properties": {
                                                "virtualHub": {
                                                    "id": "[variables('vWanHub')]"
                                                },
                                                "bgpSettings": {
                                                    "asn": "[variables('vpnBgpAsn')]"
                                                },
                                                "vpnGatewayScaleUnit": 1
                                            }
                                        },
                                        // Conditional deployment of ExpressRoute Gateway
                                        {
                                            "condition": "[and(equals(parameters('enableVwan'), 'Yes'), equals(parameters('enableErGw'), 'Yes'))]",
                                            "type": "Microsoft.Network/expressRouteGateways",
                                            "apiVersion": "[variables('apiVersions').expressRouteGateways]",
                                            "name": "[variables('erGwName')]",
                                            "location": "[parameters('location')]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/virtualHubs/', variables('vHubName'))]"
                                            ],
                                            "properties": {
                                                "virtualHub": {
                                                    "id": "[variables('vWanHub')]"
                                                },
                                                "autoScaleConfiguration": {
                                                    "bounds": {
                                                        "min": 1,
                                                        "max": 1
                                                    }
                                                }
                                            }
                                        },
                                        // Deployment of Azure Firewall Policy
                                        {
                                            "type": "Microsoft.Network/firewallPolicies",
                                            "apiVersion": "[variables('apiVersions').firewallPolicies]",
                                            "name": "[variables('azFwPolicyName')]",
                                            "location": "[parameters('location')]",
                                            "properties": {
                                                "threatIntelMode": "Alert"
                                            }
                                        },
                                        // Deployment of Azure Firewall Policy Rule Collection Group (NetworkRule)
                                        {
                                            "type": "Microsoft.Network/firewallpolicies/ruleCollectionGroups",
                                            "apiVersion": "[variables('apiVersions').ruleCollectionGroups]",
                                            "name": "[concat(variables('azFwPolicyName'), '/DefaultNetworkRuleCollectionGroup')]",
                                            "location": "[parameters('location')]",
                                            "dependsOn": [
                                                "[resourceId('Microsoft.Network/firewallpolicies/', variables('azFwPolicyName'))]"
                                            ],
                                            "properties": {
                                                "priority": 200,
                                                "ruleCollections": [
                                                    {
                                                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                                                        "name": "DNS-Collection",
                                                        "priority": 101,
                                                        "action": {
                                                            "type": "Allow"
                                                        },
                                                        "rules": [
                                                            {
                                                                "ruleType": "NetworkRule",
                                                                "name": "DNS",
                                                                "ipProtocols": [
                                                                    "Any"
                                                                ],
                                                                "sourceAddresses": [
                                                                    "*"
                                                                ],
                                                                "sourceIpGroups": [],
                                                                "destinationAddresses": [
                                                                    "*"
                                                                ],
                                                                "destinationIpGroups": [],
                                                                "destinationFqdns": [],
                                                                "destinationPorts": [
                                                                    "53"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        },
                                        // Conditional deployment of Azure Firewall
                                        {
                                            "condition": "[equals(parameters('enableAzFw'), 'Yes')]",
                                            "type": "Microsoft.Network/azureFirewalls",
                                            "apiVersion": "[variables('apiVersions').azureFirewalls]",
                                            "name": "[variables('azFwName')]",
                                            "location": "[parameters('location')]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/virtualHubs/',variables('vHubName'))]",
                                                "[concat('Microsoft.Network/firewallpolicies/', variables('azFwPolicyName'))]"
                                            ],
                                            "properties": {
                                                "sku": {
                                                    "Name": "AZFW_Hub",
                                                    "Tier": "Standard"
                                                },
                                                "hubIPAddresses": {
                                                    "publicIPs": {
                                                        "addresses": "[json('[]')]",
                                                        "count": 1
                                                    }
                                                },
                                                "virtualHub": {
                                                    "id": "[variables('vWanHub')]"
                                                },
                                                "firewallPolicy": {
                                                      "id": "[json('null')]"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    ]
}