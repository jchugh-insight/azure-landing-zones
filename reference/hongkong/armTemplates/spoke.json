{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/tenantDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "companyPrefix": {
            "type": "string",
            "maxLength": 5,
            "metadata": {
                "description": "Provide the company identifier prefix (max 5 characters)"
            }
        },
        "locationPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the location identifier prefix (3 characters)"
            }
        },
        "environmentPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the environment identifier prefix (3 characters)"
            }
        },
        "argPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the resource group identifier"
            }
        },
        "vntPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the virtual network identifier prefix"
            }
        },
        "staPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the Azure Storage identifier prefix"
            }
        },
        "udrPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the Route Table identifier prefix"
            }
        },
        "nsgPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the Network Security Group identifier prefix"
            }
        },
        "rsvPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the Recovery Services Vault prefix"
            }
        },
        "subscriptionTag": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Provide the value for the environment tag"
            }
        },
        "ownerTag": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Provide the value for the owner tag"
            }
        },
        "costCenterTag": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Provide the value for the cost center tag"
            }
        },
        "SpokeSubscriptionId": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 36,
            "metadata": {
                "description": "Provide the subscription id for a Landing Zone Subscription"
            }
        },
        "enableAsc": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected when also adding a subscription for management, ARM will assign two policies to enable auditing in your environment, into the Log Analytics workspace for platform monitoring. If 'No', it will be ignored."
            }
        },
        "enableAscForServers": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForAppServices": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForStorage": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForSql": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForSqlOnVm": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForKeyVault": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForArm": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForDns": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForKubernetes": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableAscForRegistries": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ]
        },
        "enableStorage": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected then an Azure Storage Account will be deployed."
            }
        },
        "enableRsv": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected then a Recovery Services Vault will be deployed."
            }
        },
        "enableSpoke": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "connectivitySubscriptionId": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 36,
            "metadata": {
                "description": "Provide the subscription id of the Platform Connectivity Subscription ."
            }
        },
        "hubVnetName": {
            "type": "string",
            "defaultValue": ""
        },
        "hubVnetRg": {
            "type": "string",
            "defaultValue": ""
        },
        "enableUdr": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "hubFwIp": {
            "type": "string",
            "defaultValue": ""
        },
        "enableWeb": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "enableApp": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "enableData": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "subnetMaskForWeb": {
            "type": "string",
            "defaultValue": ""
        },
        "subnetMaskForApp": {
            "type": "string",
            "defaultValue": ""
        },
        "subnetMaskForData": {
            "type": "string",
            "defaultValue": ""
        },
        "location": {
            "type": "string",
            "defaultValue": "[deployment().location]"
        },
        "addressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Address prefix"
            },
            "defaultValue": ""
        },
        "enableBudget": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "startDate": {
            "type": "string",
            "defaultValue": "[concat(utcNow('MM'), '/01/', utcNow('yyyy'))]"
        },
        "amount": {
            "type": "string",
            "defaultValue": ""
        },
        "timeGrain": {
            "type": "string",
            "defaultValue": "Monthly",
            "allowedValues": [
                "Monthly",
                "Quarterly",
                "Annually"
            ]
        },
        "contactEmails": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "deploymentUris": {
            "storage": "[uri(deployment().properties.templateLink.uri, 'storage.json')]",
            "recoveryServicesVault": "[uri(deployment().properties.templateLink.uri, 'recoveryServicesVault.json')]",
            "spokeConnectivity": "[uri(deployment().properties.templateLink.uri, 'spokeConnectivity.json')]",
            "spokePeer": "[uri(deployment().properties.templateLink.uri, 'spokePeer.json')]",
            "budget": "[uri(deployment().properties.templateLink.uri, 'budget.json')]",
            "diagnosticsAndSecurity": "[uri(deployment().properties.templateLink.uri, 'hub/diagnosticsAndSecurity.json')]"
        },
        "moveSubscription": "[concat(parameters('companyPrefix'), '-landingZones', '/', parameters('SpokeSubscriptionId'))]",
        "noSubscription": "[concat(parameters('companyPrefix'), '-landingZones', '/', 'na')]",
        "deploymentNames": {
            "storage": "[take(concat('storage', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
            "recoveryServicesVault": "[take(concat('rsv', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
            "spokeConnectivity": "[take(concat('spokeConnectivity', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
            "spokePeer": "[take(concat('spokePeer', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
            "budget": "[take(concat('budget', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
            "diagnosticsAndSecurity": "[take(concat('diagSecurity', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]"
        },
        "apiVersions": {
            "deployments": "2020-06-01",
            "subscriptions": "2020-05-01"
        }
    },
    "resources": [
        {
            "comments": "Move the spoke subscription to the appropriate Management Group (Landing Zone MGs)",
            "condition": "[not(empty(parameters('SpokeSubscriptionId')))]",
            "type": "Microsoft.Management/managementGroups/subscriptions",
            "apiVersion": "[variables('apiVersions').subscriptions]",
            "name": "[if(not(empty(parameters('SpokeSubscriptionId'))), variables('moveSubscription'), variables('noSubscription'))]",
            "dependsOn": [
            ],
            "properties": {}
        },
        {
            "comments": "Linked template for the creation of a Recovery Services Vault for the Landing Zone Subscription",
            "condition": "[and(not(empty(parameters('SpokeSubscriptionId'))),equals(parameters('enableRsv'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "subscriptionId": "[parameters('SpokeSubscriptionId')]",
            "name": "[variables('deploymentNames').recoveryServicesVault]",
            "dependsOn": [
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').recoveryServicesVault]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "argPrefix": {
                        "value": "[parameters('argPrefix')]"
                    },
                    "rsvPrefix": {
                        "value": "[parameters('rsvPrefix')]"
                    },
                    "enableRsv": {
                        "value": "[parameters('enableRsv')]"
                    },
                    "subscriptionTag": {
                        "value": "[parameters('subscriptionTag')]"
                    },
                    "ownerTag": {
                        "value": "[parameters('ownerTag')]"
                    },
                    "costCenterTag": {
                        "value": "[parameters('costCenterTag')]"
                    }
                }
            }
        },
        {
            "comments": "Linked template for the creation of an Azure storage account for the Landing Zone Subscription",
            "condition": "[and(not(empty(parameters('SpokeSubscriptionId'))),equals(parameters('enableStorage'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "subscriptionId": "[parameters('SpokeSubscriptionId')]",
            "name": "[variables('deploymentNames').storage]",
            "dependsOn": [
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').storage]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "argPrefix": {
                        "value": "[parameters('argPrefix')]"
                    },
                    "staPrefix": {
                        "value": "[parameters('staPrefix')]"
                    },
                    "enableStorage": {
                        "value": "[parameters('enableStorage')]"
                    },
                    "subscriptionTag": {
                        "value": "[parameters('subscriptionTag')]"
                    },
                    "ownerTag": {
                        "value": "[parameters('ownerTag')]"
                    },
                    "costCenterTag": {
                        "value": "[parameters('costCenterTag')]"
                    }
                }
            }
        },
        {
            "comments": "Linked template for the creation of the spoke virtual network for the Landing Zone Subscription",
            "condition": "[and(not(empty(parameters('SpokeSubscriptionId'))),equals(parameters('enableSpoke'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('companyPrefix'), '-platform')]",
            "name": "[variables('deploymentNames').spokeConnectivity]",
            "dependsOn": [
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').spokeConnectivity]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "argPrefix": {
                        "value": "[parameters('argPrefix')]"
                    },
                    "vntPrefix": {
                        "value": "[parameters('vntPrefix')]"
                    },
                    "udrPrefix": {
                        "value": "[parameters('udrPrefix')]"
                    },
                    "nsgPrefix": {
                        "value": "[parameters('nsgPrefix')]"
                    },
                    "subscriptionTag": {
                        "value": "[parameters('subscriptionTag')]"
                    },
                    "ownerTag": {
                        "value": "[parameters('ownerTag')]"
                    },
                    "costCenterTag": {
                        "value": "[parameters('costCenterTag')]"
                    },
                    "enableSpoke": {
                        "value": "[parameters('enableSpoke')]"
                    },
                    "enableUdr": {
                        "value": "[parameters('enableUdr')]"
                    },
                    "hubFwIp": {
                        "value": "[parameters('hubFwIp')]"
                    },
                    "addressPrefix": {
                        "value": "[parameters('addressPrefix')]"
                    },
                    "enableWeb": {
                        "value": "[parameters('enableWeb')]"
                    },
                    "enableApp": {
                        "value": "[parameters('enableApp')]"
                    },
                    "enableData": {
                        "value": "[parameters('enableData')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "SpokeSubscriptionId": {
                        "value": "[parameters('SpokeSubscriptionId')]"
                    },
                    "subnetMaskForWeb": {
                        "value": "[parameters('subnetMaskForWeb')]"
                    },
                    "subnetMaskForApp": {
                        "value": "[parameters('subnetMaskForApp')]"
                    },
                    "subnetMaskForData": {
                        "value": "[parameters('subnetMaskForData')]"
                    }
                }
            }
        },
        {
            "comments": "Linked template for the creation of the Virtual Network Peer between the Spoke and Connectivity Hub",
            "condition": "[and(not(empty(parameters('SpokeSubscriptionId'))),equals(parameters('enableSpoke'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "subscriptionId": "[parameters('SpokeSubscriptionId')]",
            "name": "[variables('deploymentNames').spokePeer]",
            "dependsOn": [
                "[variables('deploymentNames').spokeConnectivity]"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').spokePeer]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "argPrefix": {
                        "value": "[parameters('argPrefix')]"
                    },
                    "vntPrefix": {
                        "value": "[parameters('vntPrefix')]"
                    },
                    "enableSpoke": {
                        "value": "[parameters('enableSpoke')]"
                    },
                    "addressPrefix": {
                        "value": "[parameters('addressPrefix')]"
                    },
                    "connectivitySubscriptionId": {
                        "value": "[parameters('connectivitySubscriptionId')]"
                    },
                    "hubVnetName": {
                        "value": "[parameters('hubVnetName')]"
                    },
                    "hubVnetRg": {
                        "value": "[parameters('hubVnetRg')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "comments": "Linked template for the creation of a Landing Zone Subscription Budget",
            "condition": "[and(not(empty(parameters('SpokeSubscriptionId'))),equals(parameters('enableBudget'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "subscriptionId": "[parameters('SpokeSubscriptionId')]",
            "name": "[variables('deploymentNames').budget]",
            "dependsOn": [
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').budget]"
                },
                "parameters": {
                    "enableBudget": {
                        "value": "[parameters('enableBudget')]"
                    },
                    "amount": {
                        "value": "[parameters('amount')]"
                    },
                    "timeGrain": {
                        "value": "[parameters('timeGrain')]"
                    },
                    "contactEmails": {
                        "value": "[parameters('contactEmails')]"
                    },
                    "startDate": {
                        "value": "[parameters('startDate')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "deployment": {
            "type": "string",
            "value": "[concat(deployment().name, ' has successfully deployed.')]"
        }
    }
}